{"version":3,"sources":["images/arrow_back.svg","images/git.svg","images/in.svg","images/cart.svg","images/freeship.svg","images/logo_frontend_store.svg","images/banner.png","images/cart_empty.svg","images/user.png","components/ProductCard.jsx","components/Home.jsx","components/EmptyShopCart.jsx","components/ShopCart.jsx","components/RenderComments.jsx","components/Comments.jsx","components/ProductDetails.jsx","components/CheckoutForm.jsx","components/Checkout.jsx","components/Footer.jsx","services/api.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProductCard","this","props","product","title","price","thumbnail","id","freeShipping","shipping","free_shipping","addCart","quantity","available_quantity","className","data-testid","src","alt","style","width","freeship","undefined","to","pathname","state","type","onClick","value","Component","Home","handleChange","fetchProducts","fetchCategories","categories","productCards","cartItems","logo","name","onChange","placeholder","reduce","acc","curr","map","category","key","banner","EmptyShopCart","exact","back","cartImage","cartempty","ShopCart","removeCartItem","increaseItemQuantity","decreaseItemQuantity","length","item","toFixed","RenderComments","comentario","email","comment","starRate","rate","userimg","Comments","comments","bind","saveComments2","saveNew","handleComments","target","setState","localStorage","JSON","parse","getItem","object","console","log","received","setItem","stringify","previousComments","htmlFor","role","aria-label","index","ProductDetails","location","CheckoutForm","handleSubmit","required","maxLength","initialFormState","fullname","cpf","phone","cep","address","paymentMethod","formIsValid","Checkout","event","preventDefault","error","push","Footer","href","git","linkedin","getCategories","a","fetch","endpoint","json","getProductsFromCategoryAndQuery","categoryId","query","productsFromCategoryAndQuery","App","search","fetchProductCategory","setStorage","getStorage","cartItemsStorage","fetchAPI","fetchedProducts","results","fetchedCategories","fetchedProductsFromCategories","isInCart","some","itemIsInCart","find","updateCart","filter","itemToCart","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cc585163.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow_back.d4d545f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/git.6f4f1f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/in.615d402a.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.2c91ce7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/freeship.ded7f22d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_frontend_store.9a82486b.svg\";","module.exports = __webpack_public_path__ + \"static/media/banner.2396a435.png\";","module.exports = __webpack_public_path__ + \"static/media/cart_empty.7085893a.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.6cd35e6c.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './ProductCard.css';\nimport freeship from '../images/freeship.svg';\n\nexport default class ProductCard extends Component {\n  render() {\n    const { product:\n      { title,\n        price,\n        thumbnail,\n        id,\n        shipping:\n          { free_shipping: freeShipping } },\n    addCart } = this.props;\n\n    const { product: { available_quantity: quantity } } = this.props; // https://eslint.org/docs/rules/camelcase\n    const { product } = this.props;\n\n    return (\n      <div className=\"product-card\" data-testid=\"product\">\n        <img src={ thumbnail } alt={ title } style={ { width: '150px' } } className=\"product-img\" />\n        <div className=\"price-ship\">\n          <p className=\"price\">{`R$ ${price}`}</p>\n          { freeShipping ? <img src={ freeship } data-testid=\"free-shipping\" className=\"ship\" alt=\"Frete Grátis\" /> : undefined}\n        </div>\n        <h4 data-testid=\"product-detail-name\" className>{title}</h4>\n\n        <Link\n          to={ {\n            pathname: `/details/${id}`,\n            state: { product },\n          } }\n          data-testid=\"product-detail-link\"\n          className=\"viewdetails\"\n        >\n          <p>Ver Detalhes</p>\n        </Link>\n        <button\n          data-testid=\"product-add-to-cart\"\n          type=\"button\"\n          onClick={ () => addCart(product) }\n          value={ id }\n          className=\"addcart\"\n        >\n          <p className=\"add\">Adicionar ao Carrinho</p>\n          <p className=\"quantity\">{`Quantidade disponível: ${quantity}`}</p>\n        </button>\n      </div>\n    );\n  }\n}\n\nProductCard.propTypes = {\n  addCart: PropTypes.func.isRequired,\n  product: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.number,\n    available_quantity: PropTypes.number,\n    thumbnail: PropTypes.string,\n    shipping: PropTypes.shape({\n      free_shipping: PropTypes.bool,\n    }).isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ProductCard from './ProductCard';\nimport logo from '../images/logo_frontend_store.svg';\nimport banner from '../images/banner.png';\nimport './Home.css';\n\nexport default class Home extends Component {\n  render() {\n    const {\n      handleChange,\n      fetchProducts,\n      fetchCategories,\n      addCart,\n      categories,\n      productCards,\n      cartItems,\n    } = this.props;\n\n    if (categories === []) return <div>Loading...</div>;\n    return (\n      <div className=\"home\">\n        <header className=\"home-header\">\n          <div className=\"logo-header\">\n            <img src={ logo } alt=\"Front-End Online Store\" className=\"logo\" />\n          </div>\n          <div className=\"form-home\">\n            <form className=\"search-bar-home form-search\">\n              {/* Modelo retirado de https://freefrontend.com/css-search-boxes */}\n              <input\n                type=\"search\"\n                data-testid=\"query-input\"\n                name=\"search\"\n                onChange={ handleChange }\n                placeholder=\"Faça sua pesquisa\"\n              />\n              <i\n                className=\"fa fa-search\"\n                // type=\"button\"\n                // aria-label=\"Save\" // https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/control-has-associated-label.md\n                data-testid=\"query-button\"\n                onClick={ fetchProducts }\n              />\n            </form>\n          </div>\n          <Link\n            data-testid=\"shopping-cart-button\"\n            to=\"/cart\"\n          >\n            <div className=\"cart-home\">\n              <div className=\"cart-items\">\n                <p data-testid=\"shopping-cart-size\">\n                  { cartItems.reduce((acc, curr) => (acc + curr.quantity), 0)}\n                </p>\n              </div>\n            </div>\n          </Link>\n\n        </header>\n        <div className=\"main-container-home\">\n          <div className=\"category-buttons-container\">\n            <h2>Categorias</h2>\n            {categories.map((category) => (\n              <button\n                className=\"category-buttons\"\n                type=\"button\"\n                data-testid=\"category\"\n                key={ category.id }\n                value={ category.id }\n                name=\"categoryId\"\n                onClick={ () => fetchCategories(category.id) }\n              >\n                {category.name}\n              </button>\n            ))}\n          </div>\n          <div className=\"cards-container\">\n            {!productCards\n              ? <div className=\"div-banner\">\n                <img src={ banner } alt=\"\" className=\"banner\" />\n              </div> // Tentar retornar apenas após não encontrar\n              : productCards.map((product) => (\n                <ProductCard\n                  key={ product.id }\n                  product={ product }\n                  addCart={ addCart }\n                />))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  addCart: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  fetchProducts: PropTypes.func.isRequired,\n  fetchCategories: PropTypes.func.isRequired,\n  categories: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string,\n    map: PropTypes.func,\n  }).isRequired,\n  cartItems: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string,\n    reduce: PropTypes.func,\n  }).isRequired,\n  productCards: PropTypes.shape({\n    map: PropTypes.func,\n  }).isRequired,\n\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport cartImage from '../images/cart.svg';\nimport back from '../images/arrow_back.svg';\nimport cartempty from '../images/cart_empty.svg';\nimport './ShopCart.css';\n\nexport default class EmptyShopCart extends Component {\n  render() {\n    return (\n      <div className=\"body\">\n        <header className=\"cart-header\">\n          <Link exact to=\"/\">\n            <img src={ back } alt=\"Cart\" style={ { width: '50px' } } className=\"back\" />\n          </Link>\n          <h1> Carrinho de Compras </h1>\n          <img src={ cartImage } alt=\"Cart\" style={ { width: '60px' } } />\n        </header>\n        <div className=\"cartbody-empty\">\n          <img src={ cartempty } alt=\"Carrinho vazio\" />\n          <h2 className=\"empty-cart-message\" data-testid=\"shopping-cart-empty-message\">\n            Seu carrinho está vazio\n          </h2>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport EmptyShopCart from './EmptyShopCart';\nimport cartImage from '../images/cart.svg';\nimport back from '../images/arrow_back.svg';\nimport './ShopCart.css';\n\nexport default class ShopCart extends Component {\n  render() {\n    const {\n      cartItems,\n      removeCartItem,\n      increaseItemQuantity,\n      decreaseItemQuantity,\n    } = this.props;\n    if (cartItems.length === 0) return <EmptyShopCart />;\n\n    return (\n      <div className=\"body\">\n        <header className=\"cart-header\">\n          <Link exact to=\"/\">\n            <img src={ back } alt=\"Cart\" className=\"back\" />\n          </Link>\n          <h1> Carrinho de Compras </h1>\n          <img src={ cartImage } alt=\"Cart\" className=\"cart\" />\n        </header>\n        <div className=\"carbody\">\n\n          { cartItems.map((item) => (\n            <div className=\"cart-product-container\" key={ item.id }>\n              <button\n                className=\"button-clear\"\n                onClick={ removeCartItem }\n                type=\"button\"\n                value={ item.id }\n              >\n                X\n              </button>\n              <div className=\"img-title\">\n                <img className=\"image-product-cart\" src={ item.thumbnail } alt={ item.id } />\n                <p\n                  className=\"cart-product-title\"\n                  data-testid=\"shopping-cart-product-name\"\n                >\n                  { item.title }\n                </p>\n              </div>\n              <div className=\"quantity-item\">\n                <button\n                  className=\"button-decrease\"\n                  onClick={ decreaseItemQuantity }\n                  type=\"button\"\n                  value={ item.id }\n                  data-testid=\"product-decrease-quantity\"\n                >\n                  -\n                </button>\n                <p data-testid=\"shopping-cart-product-quantity\">{ item.quantity }</p>\n                <button\n                  className=\"button-increase\"\n                  onClick={ item.quantity < item.available_quantity && increaseItemQuantity }\n                  type=\"button\"\n                  value={ item.id }\n                  data-testid=\"product-increase-quantity\"\n                >\n                  +\n                </button>\n                <p className=\"avaliable-quantity\">{`Disponível: ${item.available_quantity}`}</p>\n              </div>\n              <p className=\"item-price\">{`R$ ${item.price} un.`}</p>\n            </div>))}\n        </div>\n        <div className=\"gocheckout\">\n          <div className=\"total-price\">\n            {`Valor Total da Compra: R$${cartItems.reduce((acc, curr) => (\n              acc + (curr.quantity * curr.price)), 0).toFixed(2)}`}\n          </div>\n          <Link\n            to=\"/checkout\"\n          >\n            <button\n              className=\"go-to-checkout-button\"\n              type=\"button\"\n              data-testid=\"checkout-products\"\n              value={ cartItems }\n            >\n              Finalizar Compra\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nShopCart.propTypes = {\n  cartItems: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string,\n    length: PropTypes.number,\n    map: PropTypes.func,\n    quantity: PropTypes.number,\n    reduce: PropTypes.func,\n  }).isRequired,\n  removeCartItem: PropTypes.func.isRequired,\n  increaseItemQuantity: PropTypes.func.isRequired,\n  decreaseItemQuantity: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport userimg from '../images/user.png';\n\nexport default class RenderComments extends Component {\n  render() {\n    const { comentario: { email, comment, rate } } = this.props;\n    let starRate = '';\n    switch (rate) {\n    case '1':\n      starRate = '★';\n      break;\n    case '2':\n      starRate = '★★';\n      break;\n    case '3':\n      starRate = '★★★';\n      break;\n    case '4':\n      starRate = '★★★★';\n      break;\n    case '5':\n      starRate = '★★★★★';\n      break;\n    default:\n    }\n    return (\n      <div className=\"user-comment\">\n        <img src={ userimg } alt=\"User profile\" className=\"user-img\" />\n        <div className=\"comment-info\">\n          <p className=\"comment-rate\">{ starRate }</p>\n          <h4 className=\"comment-email\">{ email }</h4>\n          <p className=\"comment-text\">{ comment }</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nRenderComments.propTypes = {\n  comentario: PropTypes.shape({\n    rate: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    email: PropTypes.string,\n    comment: PropTypes.string,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport RenderComments from './RenderComments';\nimport './ProductDetails.css';\n\nexport default class Comments extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      comment: '',\n      rate: '',\n      /* comments: null, // com a primeira função Save precisa ser null, o array quebra */\n      comments: [], // com a primeira função Save precisa ser null, o array quebra\n\n    };\n    /* this.saveComments = this.saveComments.bind(this); */\n    this.handleChange = this.handleChange.bind(this);\n    this.saveComments2 = this.saveComments2.bind(this);\n    this.saveNew = this.saveNew.bind(this);\n    this.handleComments = this.handleComments.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props;\n    this.handleComments(id);\n    //  this.saveComments2();\n  }\n\n  handleChange({ target }) {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleComments(id) {\n    if (localStorage[id]) {\n      this.setState({\n        comments: JSON.parse(localStorage.getItem(id)),\n      });\n    }\n  }\n\n  saveComments2() { // essa função adiciona o objeto corretamente no localStorage, mas não consegui incluir o map corretamente na página (adiciona apenas no segundo clique e atrasado)\n    const { comment, rate } = this.state;\n    const { id } = this.props;\n    const object = { comment, rate };\n    if (rate === 0) {\n      console.log('Não há avaliação');\n    } else {\n      const getItem = localStorage.getItem(id);\n      if (!getItem) {\n        localStorage.setItem(id, JSON.stringify([object]));\n      } else {\n        const received = JSON.parse(getItem);\n        localStorage.setItem(id, JSON.stringify([...received, object]));\n        this.setState({ comments: received }); // setState no escopo do else recebe\n      }\n    }\n  }\n\n  saveNew() {\n    const object = {};\n    const { email, comment, rate } = this.state;\n    const { id } = this.props;\n\n    if (rate === '') {\n      console.log('Não há avaliação');\n    } else {\n      object.email = email;\n      object.comment = comment;\n      object.rate = rate;\n      if (!localStorage[id]) {\n        localStorage.setItem(id, JSON.stringify([object]));\n      } else {\n        const previousComments = JSON.parse(localStorage.getItem(id));\n        console.log(previousComments);\n        localStorage.setItem(id, JSON.stringify([...previousComments, object]));\n      }\n      this.handleComments(id);\n    }\n  }\n\n  render() {\n    const { comments } = this.state;\n    return (\n      <div className=\"form-avaliation\">\n        <h3>Escrever Avaliações</h3>\n        <form className=\"form-comments\">\n          <div className=\"form-email\">\n            <label htmlFor=\"email\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={ this.handleChange }\n              />\n            </label>\n          </div>\n          <div className=\"text-area\">\n            <textarea\n              type=\"text\"\n              onChange={ this.handleChange }\n              placeholder=\"Mensagem(Opcional)\"\n              data-testid=\"product-detail-evaluation\"\n              name=\"comment\"\n            />\n          </div>\n          <div className=\"rating-submit\">\n            <div role=\"radiogroup\" className=\"radio-group\">\n              <h4 className=\"product-class\">Classifique o produto</h4>\n              {/* Modelo de radio buttons retirado de https://codeconvey.com/css-star-rating-radio-buttons/ */}\n              <span className=\"star-cb-group\">\n                <input type=\"radio\" id=\"rating-5\" name=\"rate\" value=\"5\" onChange={ this.handleChange } />\n                {/* <input type=\"radio\" id=\"rating-5\" name=\"rate\" value=\"5\" checked=\"checked\" onChange={ this.handleChange } /> */}\n                <label htmlFor=\"rating-5\">5</label>\n                <input type=\"radio\" id=\"rating-4\" name=\"rate\" value=\"4\" onChange={ this.handleChange } />\n                <label htmlFor=\"rating-4\">4</label>\n                <input type=\"radio\" id=\"rating-3\" name=\"rate\" value=\"3\" onChange={ this.handleChange } />\n                <label htmlFor=\"rating-3\">3</label>\n                <input type=\"radio\" id=\"rating-2\" name=\"rate\" value=\"2\" onChange={ this.handleChange } />\n                <label htmlFor=\"rating-2\">2</label>\n                <input type=\"radio\" id=\"rating-1\" name=\"rate\" value=\"1\" onChange={ this.handleChange } />\n                <label htmlFor=\"rating-1\">1</label>\n                <input type=\"radio\" id=\"rating-0\" name=\"rate\" value=\"0\" className=\"star-cb-clear\" onChange={ this.handleChange } />\n                <label htmlFor=\"rating-0\">0</label>\n              </span>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                aria-label=\"Save\" // https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/master/docs/rules/control-has-associated-label.md\n                data-testid=\"query-button\"\n                onClick={ this.saveNew }\n                className=\"avaliate\"\n              >\n                Avaliar\n              </button>\n            </div>\n          </div>\n        </form>\n        <div className=\"avaliations\">\n          <h3>Avaliações do Produto</h3>\n          {comments.map((value, index) => (\n            <RenderComments\n              key={ index }\n              comentario={ value }\n            />))}\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nComments.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Comments from './Comments';\nimport './ProductDetails.css';\nimport back from '../images/arrow_back.svg';\n\nexport default class ProductDetails extends Component {\n  render() {\n    const { location:\n      { state:\n        { product,\n        },\n      }, addCart, cartItems } = this.props;\n\n    return (\n      <>\n        <header className=\"detail-header\">\n          <Link exact to=\"/\">\n            <img src={ back } alt=\"Home\" className=\"back\" />\n          </Link>\n          <h1> Detalhes </h1>\n          <Link\n            data-testid=\"shopping-cart-button\"\n            to=\"/cart\"\n          >\n            <div className=\"cart-home\">\n              <div className=\"cart-items\">\n                <p data-testid=\"shopping-cart-size\">\n                  { cartItems.reduce((acc, curr) => (acc + curr.quantity), 0)}\n                </p>\n              </div>\n            </div>\n          </Link>\n        </header>\n        <div className=\"detail-product\">\n          <div className=\"product-img\">\n            <img src={ product.thumbnail } alt={ product.title } />\n          </div>\n          <div className=\"detail-info\">\n            <div data-testid=\"product\">\n              <h4 data-testid=\"product-detail-name\">{product.title}</h4>\n              <p className=\"item-price\">{`R$ ${product.price}`}</p>\n              <br />\n              <div className=\"details-resume\">\n                <h5>Detalhes</h5>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed non vestibulum ex, nec viverra odio. Integer magna urna, ultricies vel ultrices eget, ultrices id nunc. Nunc rhoncus auctor elit, et interdum mauris porttitor eget. Praesent pulvinar elit luctus est laoreet ornare. </p>\n              </div>\n            </div>\n            <br />\n            <button\n              className=\"add-cart-detail\"\n              data-testid=\"product-detail-add-to-cart\"\n              type=\"button\"\n              onClick={ () => addCart(product) }\n              value={ product.id }\n            >\n              Adicionar ao carrinho\n            </button>\n          </div>\n        </div>\n        <div>\n          <Comments id={ product.id } />\n        </div>\n      </>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      product: PropTypes.shape({\n        title: PropTypes.string,\n        price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        thumbnail: PropTypes.string,\n        id: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n  addCart: PropTypes.func.isRequired,\n  cartItems: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string,\n    reduce: PropTypes.func,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Checkout.css';\n\nexport default class CheckoutForm extends Component {\n  render() {\n    const { handleChange, handleSubmit } = this.props;\n\n    return (\n      <form className=\"checkout-form\">\n        <fieldset className=\"client-info\">\n          <h2>Informações do Comprador</h2>\n          <div className=\"name-cpf\">\n            <label htmlFor=\"checkout-fullname\">\n              <input\n                type=\"text\"\n                data-testid=\"checkout-fullname\"\n                placeholder=\"Nome Completo\"\n                name=\"fullname\"\n                onChange={ handleChange }\n                required\n              />\n            </label>\n            <label htmlFor=\"checkout-cpf\">\n              <input\n                type=\"text\"\n                maxLength=\"11\"\n                data-testid=\"checkout-cpf\"\n                placeholder=\"CPF\"\n                name=\"cpf\"\n                onChange={ handleChange }\n                required\n              />\n            </label>\n          </div>\n          <div className=\"email-phone\">\n            <label htmlFor=\"checkout-email\">\n              <input\n                type=\"text\"\n                data-testid=\"checkout-email\"\n                placeholder=\"Email\"\n                name=\"email\"\n                onChange={ handleChange }\n                required\n              />\n            </label>\n            <label htmlFor=\"checkout-phone\">\n              <input\n                type=\"text\"\n                data-testid=\"checkout-phone\"\n                placeholder=\"Telefone\"\n                name=\"phone\"\n                onChange={ handleChange }\n                required\n              />\n            </label>\n          </div>\n          <div className=\"adress\">\n            <label htmlFor=\"checkout-cep\">\n              <input\n                type=\"text\"\n                data-testid=\"checkout-cep\"\n                placeholder=\"CEP\"\n                name=\"cep\"\n                maxLength=\"8\"\n                onChange={ handleChange }\n                required\n              />\n            </label>\n            <label htmlFor=\"checkout-address\">\n              <input\n                type=\"text\"\n                data-testid=\"checkout-address\"\n                placeholder=\"Endereço\"\n                name=\"address\"\n                onChange={ handleChange }\n                required\n              />\n            </label>\n          </div>\n        </fieldset>\n        <fieldset className=\"payment-method\">\n          <h2>Método de Pagamento</h2>\n          <label htmlFor=\"boleto\">\n            <input\n              type=\"radio\"\n              name=\"paymentMethod\"\n              onChange={ handleChange }\n            />\n            Boleto\n          </label>\n          <label htmlFor=\"card\">\n            <h4>Cartão de Crédito</h4>\n            <input\n              type=\"radio\"\n              value=\"visa\"\n              name=\"paymentMethod\"\n              onChange={ handleChange }\n            />\n            Visa\n            <input\n              type=\"radio\"\n              value=\"masterCard\"\n              name=\"paymentMethod\"\n              onChange={ handleChange }\n            />\n            MasterCard\n            <input\n              type=\"radio\"\n              value=\"elo\"\n              name=\"paymentMethod\"\n              onChange={ handleChange }\n            />\n            Elo\n          </label>\n        </fieldset>\n        <button\n          className=\"finish-checkout-button\"\n          type=\"submit\"\n          onClick={ handleSubmit }\n        >\n          Finalizar Compra\n        </button>\n      </form>\n    );\n  }\n}\n\nCheckoutForm.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport CheckoutForm from './CheckoutForm';\nimport back from '../images/arrow_back.svg';\nimport './ShopCart.css';\nimport './Checkout.css';\n\nconst initialFormState = {\n  fullname: '',\n  email: '',\n  cpf: '',\n  phone: '',\n  cep: '',\n  address: '',\n  paymentMethod: '',\n  formIsValid: false,\n};\n\nexport default class Checkout extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = initialFormState;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      fullname,\n      email,\n      cpf,\n      phone,\n      cep,\n      address,\n      paymentMethod,\n    } = this.state;\n    const error = [];\n    if (fullname === '') {\n      error.push('fullname');\n    }\n    if (email === '') {\n      error.push('email');\n    }\n    if (cpf === '') {\n      error.push('cpf');\n    }\n    if (phone === '') {\n      error.push('phone');\n    }\n    if (cep === '') {\n      error.push('cep');\n    }\n    if (address === '') {\n      error.push('address');\n    }\n    if (paymentMethod === '') {\n      error.push('paymentMethod');\n    }\n    if (error.length) {\n      return;\n    }\n    this.setState({ formIsValid: true });\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { cartItems } = this.props;\n    const { formIsValid } = this.state;\n    if (formIsValid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"checkout-container\">\n        <header className=\"checkout-header\">\n          <Link exact to=\"/cart\">\n            <img src={ back } alt=\"Cart\" className=\"back\" />\n          </Link>\n          <h1> Checkout </h1>\n          <div style={ { width: '50px' } } />\n        </header>\n        <div className=\"body-checkout\">\n          <div className=\"checkout-products-review\">\n            <h2>Revise seus Produtos</h2>\n            { cartItems.map((item) => (\n              <div className=\"checkout-product\" key={ item.id }>\n                <img\n                  className=\"image-product-cart\"\n                  src={ item.thumbnail }\n                  alt={ item.id }\n                />\n                <p className=\"cart-product-title\">\n                  { item.title }\n                </p>\n                <p className=\"price-params\">{`Quantidade: ${item.quantity}`}</p>\n                <p className=\"price-params\">{`Valor unitário: R$ ${item.price}`}</p>\n                <p\n                  className=\"price-params\"\n                >\n                  {`Valor total: R$ ${(item.price * item.quantity).toFixed(2)}`}\n                </p>\n              </div>))}\n            <div className=\"price-total\">\n              <h2>\n                {`Valor Total da Compra: R$${cartItems.reduce((acc, curr) => (\n                  acc + (curr.quantity * curr.price)), 0).toFixed(2)}`}\n              </h2>\n            </div>\n          </div>\n          <CheckoutForm\n            handleChange={ this.handleChange }\n            handleSubmit={ this.handleSubmit }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  cartItems: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string,\n    length: PropTypes.number,\n    map: PropTypes.func,\n    quantity: PropTypes.number,\n    reduce: PropTypes.func,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport git from '../images/git.svg';\nimport linkedin from '../images/in.svg';\nimport './Footer.css';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <section className=\"foot\">\n        <div className=\"color\" />\n        <div className=\"footer\">\n          <div className=\"intern-footer\">\n            <div className=\"dev\">\n              <a href=\"https://github.com/diogotrescastro\">\n                <img src={ git } alt=\"GitHub Link\" className=\"git-image\" />\n              </a>\n              <a href=\"https://www.linkedin.com/in/diogoaugusto/\">\n                <img src={ linkedin } alt=\"Linkedin Link\" className=\"linkedin-image\" />\n              </a>\n              <span>\n                <b>Diogo</b>\n                &nbsp;Augusto\n              </span>\n            </div>\n            <div className=\"dev\">\n              <a href=\"https://github.com/gabrielafeijo\">\n                <img src={ git } alt=\"GitHub Link\" className=\"git-image\" />\n              </a>\n              <a href=\"https://www.linkedin.com/in/gabriela-feijo/\">\n                <img src={ linkedin } alt=\"Linkedin Link\" className=\"linkedin-image\" />\n              </a>\n              <span>\n                <b>Gabriela</b>\n                &nbsp;Feijó\n              </span>\n            </div>\n            <div className=\"dev\">\n              <a href=\"https://github.com/Halysson2\">\n                <img src={ git } alt=\"GitHub Link\" className=\"git-image\" />\n              </a>\n              <a>\n                <img src={ linkedin } alt=\"Linkedin Link\" className=\"linkedin-image\" />\n              </a>\n              <span>\n                <b>Halysson</b>\n                &nbsp;Sena\n              </span>\n            </div>\n            <div className=\"dev\">\n              <a href=\"https://github.com/leonardo-pinto\">\n                <img src={ git } alt=\"GitHub Link\" className=\"git-image\" />\n              </a>\n              <a href=\"https://www.linkedin.com/in/leonardo-antonio-pinto/\">\n                <img src={ linkedin } alt=\"Linkedin Link\" className=\"linkedin-image\" />\n              </a>\n              <span>\n                <b>Leonardo</b>\n                &nbsp;Pinto\n              </span>\n            </div>\n            <div className=\"dev\">\n              <a href=\"https://github.com/Sicarruda\">\n                <img src={ git } alt=\"GitHub Link\" className=\"git-image\" />\n              </a>\n              <a href=\"https://www.linkedin.com/in/jessica-arruda-62040a72/\">\n                <img src={ linkedin } alt=\"Linkedin Link\" className=\"linkedin-image\" />\n              </a>\n              <span>\n                <b>Jéssica</b>\n                &nbsp;Arruda\n              </span>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","export async function getCategories() {\n  const endpoint = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const categories = await endpoint.json();\n  return categories;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const endpoint = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  const productsFromCategoryAndQuery = await endpoint.json();\n  return productsFromCategoryAndQuery;\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport ShopCart from './components/ShopCart';\nimport ProductDetails from './components/ProductDetails';\nimport Checkout from './components/Checkout';\nimport Footer from './components/Footer';\nimport * as fetchAPI from './services/api';\nimport './App.css';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n      productCards: undefined,\n      categoryId: '',\n      search: '',\n      cartItems: [],\n    };\n    this.fetchProductCategory = this.fetchProductCategory.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.fetchProducts = this.fetchProducts.bind(this);\n    this.fetchCategories = this.fetchCategories.bind(this);\n    this.addCart = this.addCart.bind(this);\n    this.removeCartItem = this.removeCartItem.bind(this);\n    this.increaseItemQuantity = this.increaseItemQuantity.bind(this);\n    this.decreaseItemQuantity = this.decreaseItemQuantity.bind(this);\n    this.setStorage = this.setStorage.bind(this);\n    this.getStorage = this.getStorage.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchProductCategory();\n    if (localStorage.getItem('localCart')) {\n      this.getStorage();\n    }\n  }\n\n  componentDidUpdate() {\n    this.setStorage();\n  }\n\n  handleChange({ target }) {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  setStorage() {\n    const { cartItems } = this.state;\n    localStorage.setItem('localCart', JSON.stringify(cartItems));\n  }\n\n  getStorage() {\n    const cartItemsStorage = JSON.parse(localStorage.getItem('localCart'));\n    this.setState({\n      cartItems: cartItemsStorage,\n    });\n  }\n\n  async fetchProducts() {\n    const { categoryId, search } = this.state;\n    const fetchedProducts = await\n    fetchAPI.getProductsFromCategoryAndQuery(categoryId, search);\n    this.setState({ productCards: fetchedProducts.results });\n  }\n\n  async fetchProductCategory() {\n    const fetchedCategories = await fetchAPI.getCategories();\n    this.setState({\n      categories: fetchedCategories,\n    });\n  }\n\n  async fetchCategories(id) {\n    const fetchedProductsFromCategories = await\n    fetchAPI.getProductsFromCategoryAndQuery(id);\n    this.setState({\n      productCards: fetchedProductsFromCategories.results,\n      categoryId: id,\n    });\n  }\n\n  addCart(product) {\n    const { cartItems } = this.state;\n    const isInCart = cartItems.some((item) => item.id === product.id);\n    const itemIsInCart = cartItems.find((item) => item.id === product.id);\n    if (!isInCart) {\n      product.quantity = 1;\n      this.setState({\n        cartItems: [...cartItems, product],\n      });\n\n    } else {\n      itemIsInCart.quantity += 1;\n      this.setState({\n        cartItems: [...cartItems],\n      });\n    }\n    this.setStorage();\n  }\n\n  removeCartItem({ target: { value } }) {\n    const { cartItems } = this.state;\n    const updateCart = cartItems.filter(({ id }) => id !== value);\n    this.setState({\n      cartItems: updateCart,\n    });\n  }\n\n  increaseItemQuantity({ target: { value } }) {\n    const { cartItems } = this.state;\n    const itemToCart = cartItems.find((item) => item.id === value);\n    if (itemToCart) {\n      this.setState({\n        cartItems: [...cartItems],\n      });\n      itemToCart.quantity += 1;\n    }\n  }\n\n  decreaseItemQuantity({ target: { value } }) {\n    const { cartItems } = this.state;\n    const itemToCart = cartItems.find((item) => item.id === value);\n    if (itemToCart.quantity > 1) {\n      this.setState({\n        cartItems: [...cartItems],\n      });\n      itemToCart.quantity -= 1;\n    }\n  }\n\n  render() {\n    const { categories, productCards, cartItems } = this.state;\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={ () => (\n                <Home\n                  handleChange={ this.handleChange }\n                  fetchProducts={ this.fetchProducts }\n                  fetchCategories={ this.fetchCategories }\n                  addCart={ this.addCart }\n                  categories={ categories }\n                  productCards={ productCards }\n                  cartItems={ cartItems }\n                />) }\n            />\n            <Route\n              path=\"/cart\"\n              render={ (props) => (<ShopCart\n                removeCartItem={ this.removeCartItem }\n                increaseItemQuantity={ this.increaseItemQuantity }\n                decreaseItemQuantity={ this.decreaseItemQuantity }\n                cartItems={ cartItems }\n                { ...props }\n              />) }\n            />\n            <Route\n              path=\"/details/:id\"\n              render={ (props) => (<ProductDetails\n                cartItems={ cartItems }\n                addCart={ this.addCart }\n                { ...props }\n              />) }\n            />\n            <Route\n              path=\"/checkout\"\n              render={ () => (<Checkout\n                cartItems={ cartItems }\n              />) }\n            />\n          </Switch>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}